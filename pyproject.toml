[tool.poetry]
name = "lorrem"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
spacy = "^3.5.1"
markovify = "^0.9.4"
Flask = "^2.2.3"
gunicorn = "^20.1.0"
fi-core-news-md = {url = "https://github.com/explosion/spacy-models/releases/download/fi_core_news_md-3.5.0/fi_core_news_md-3.5.0-py3-none-any.whl"}
requests = "^2.28.2"
bandit = "^1.7.5"

[tool.poetry.group.dev.dependencies]
coverage = "^7.2.1"
requests-mock = "^1.10.0"
pytest = "^7.2.2"
ruff = "^0.2.1"
setuptools = "^67.6.0"


[tool.poetry.group.profiling.dependencies]
memray = "^1.7.0"
gprof2dot = "^2022.7.29"
memory-profiler = "^0.61.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.bandit]
exclude_dirs = [".venv"]

[tool.bandit.assert_used]
skips = ['*/test_*.py'] # Pytest uses asserts

[tool.coverage.run]
source = ["lorrem"]
branch = true
command_line = "-m pytest tests"
data_file = ".coverage"

[tool.coverage.report]
fail_under = 100
skip_empty = true
skip_covered = true
sort = "-Cover"
show_missing = true
exclude_lines = [
  # Don't complain if non-runnable code isn't run:
  "if __name__ == .__main__.:",
]
omit = ["animeippo/__main__.py"]

[tool.pytest.ini_options]
filterwarnings = [
  "ignore:pkg_resources is deprecated as an API:DeprecationWarning:.*",
  "ignore:Deprecated call to `pkg_resources.declare_namespace.*:DeprecationWarning:.*",
  "ignore:datetime.*:DeprecationWarning:dateutil.*",
]

[tool.ruff]
line-length = 100
exclude = [
  ".git",
  ".venv",
  ".ruff_cache",
  ".devcontainer",
  "__pycache__",
  ".pytest_cache",
  ".github",
]

[tool.ruff.lint]
select = [
  "F",
  "E",
  "I",
  "S",
  "C",
  "B",
  "A",
]


[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]
