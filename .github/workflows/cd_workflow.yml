name: Continuous delivery
on: # rebuild any PRs and main branch changes
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: "Install and cache requirements"
    steps:
      - uses: actions/checkout@v3
      - run: pipx install poetry==1.4.0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
      - run: poetry install && poetry build
  unit-test:
    name: "Run unit tests with coverage"
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: pipx install poetry==1.4.0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
      - run: poetry install --without profiling
      - run: poetry run coverage run
      - run: poetry run coverage report
  static-analysis:
    name: "Static analysis with ruff"
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: pipx install poetry==1.4.0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
      - run: poetry install --without profiling
      - run: poetry run ruff check .
  security-analysis:
    name: "Security analysis with bandit"
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: pipx install poetry==1.4.0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
      - run: poetry install --without profiling
      - run: poetry run bandit -c pyproject.toml -r lorrem
  formatting:
    name: "Check formatting with black"
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: pipx install poetry==1.4.0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'
      - run: poetry install --without profiling
      - run: poetry run black --check .
  publish:
    name: "Publish to registry"
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    needs:
      - build
      - unit-test
      - static-analysis
      - security-analysis
      - formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Publish to Registry
      uses: HurricanKai/Publish-Docker-Github-Action@1.12.1
      with:
        name: ${{ secrets.DOCKER_REGISTRY }}/lorrem-api
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        cache: true
